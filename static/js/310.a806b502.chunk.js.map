{"version":3,"file":"static/js/310.a806b502.chunk.js","mappings":"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","sources":["api/themovied_api.js","pages/Reviews.styled.js","pages/Reviews.jsx","pages/Cast.styled.js","pages/Cast.jsx","pages/MovieDetails.styled.js","pages/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\n\nconst API_KEY = '5cb4dd4cf3f1476227d92f7c4b196044';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\n\nexport const getTrendingMovies = async () =>{\n    const {data} = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`)\n    return data\n}\n\n\nexport const getMovieDetails = async (movie_id) =>{\n    const {data} = await axios.get(`${BASE_URL}/movie/${movie_id}?api_key=${API_KEY}`)\n    return data\n}\n\nexport const getMoviesBySearch = async (pathname, page = 1, query = '') =>{\n    const {data} = await axios.get(`${BASE_URL}/${pathname}?api_key=${API_KEY}&query=${query}&page=${page}`)\n    return data\n}\n\n\nexport const getMovieCast = async (movie_id) =>{\n    const {data} = await axios.get(`${BASE_URL}/movie/${movie_id}/credits?api_key=${API_KEY}`)\n    return data\n}\n\nexport const getMovieReviews= async (movie_id) =>{\n    const {data} = await axios.get(`${BASE_URL}/movie/${movie_id}/reviews?api_key=${API_KEY}`)\n    return data\n}\n\n// https://api.themoviedb.org/3/trending/movie/{time_window}\n// https://api.themoviedb.org/3/movie/{movie_id}\n// https://api.themoviedb.org/3/search/movie\n\n// https://api.themoviedb.org/3/movie/{movie_id}/credits\n\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews","import styled from '@emotion/styled';\n\nexport const ReviewsItem = styled.li`\ndisplay: flex;\n  flex-wrap: wrap;\n  gap: 32px 16px;\n  margin-bottom: 10px;\n`;","import { getMovieReviews } from 'api/themovied_api';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ReviewsItem } from './Reviews.styled';\n\nfunction Reviews() {\n  const [movieReviews, setMovieReviews] = useState(null);\n  const [isLoading, setIsloading] = useState(false);\n  const [error, setError] = useState('');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      setIsloading(true);\n      try {\n        const result = await getMovieReviews(movieId);\n        setMovieReviews(result.results);\n        console.log(result);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsloading(false);\n      }\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      <div>\n        <h2>Reviews</h2>\n        <ul>\n          {Array.isArray(movieReviews) &&\n            movieReviews.length > 0 &&\n            movieReviews.map(({ id, author, content }) => {\n              return (\n                <ReviewsItem key={id}>\n                  <h3>{author}</h3>\n                  <p>{content}</p>\n                </ReviewsItem>\n              );\n            })}\n        </ul>\n      </div>\n      {isLoading && <p>loading...</p>}\n      {error.length > 0 && <p>{error}</p>}\n    </>\n  );\n}\n\nexport default Reviews;\n","import styled from '@emotion/styled';\n\nexport const CastList = styled.ul`\nmargin-top: 20px;\ndisplay: flex;\n  flex-wrap: wrap;\n  gap: 32px 16px;\n  margin-bottom: 40px;\n  padding-left:40px;\n`;","import { getMovieCast } from 'api/themovied_api';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { CastList } from './Cast.styled';\n\nfunction Cast() {\n  const [movieCast, setMovieCast] = useState(null);\n  const [isLoading, setIsloading] = useState(false);\n  const [error, setError] = useState('');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      setIsloading(true);\n      try {\n        const result = await getMovieCast(movieId);\n        setMovieCast(result.cast);\n        console.log(result);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsloading(false);\n      }\n    };\n\n    fetchMovieCast();\n  }, [movieId]);\n\n  \n\n  return (\n    <>\n      <div>\n        <h2>Cast</h2>\n        <CastList>\n          {Array.isArray(movieCast) &&\n            movieCast.length > 0 &&\n            movieCast.map(castItem => {\n              const actorPhoto = `https://image.tmdb.org/t/p/w500/${castItem.profile_path}`\n              return <li key={castItem.id}>\n              <img src={actorPhoto} alt={castItem.name} width=\"200\"\n                  height=\"300\"/>\n                  <p>{castItem.character}</p>\n                  <p>{castItem.name}</p></li>;\n            })}\n        </CastList>\n      </div>\n      {isLoading && <p>loading...</p>}\n      {error.length > 0 && <p>{error}</p>}\n    </>\n  );\n}\n\nexport default Cast;\n","import styled from '@emotion/styled';\n\nexport const MovieDetailsList = styled.ul`\nmargin-top:20px;\ndisplay: flex;\n  flex-wrap: wrap;\n  gap: 32px 16px;\n  margin-bottom: 40px;\n`;\n\nexport const MovieDetailsWrapp = styled.div`\npadding: 10px;\n  .h2 {\n    padding-bottom: 20px\n  }\n`;\n\nexport const MovieDetailsTitle= styled.p`\npadding-bottom: 10px;\n \n  }\n`;\n\nexport const MovieDetailsOverview= styled.p`\npadding-top: 10px;\n \n  }\n`;","import { getMovieDetails } from 'api/themovied_api';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Link, Routes, Route, useParams, useLocation } from 'react-router-dom';\nimport Reviews from './Reviews';\nimport Cast from './Cast';\nimport { MovieDetailsList, MovieDetailsOverview, MovieDetailsTitle, MovieDetailsWrapp } from './MovieDetails.styled';\n\n\n\n\nfunction MovieDetails() {\n  const [movieData, setMovieData] = useState(null);\n  const [isLoading, setIsloading] = useState(false);\n  const [error, setError] = useState('');\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLink = location.state?.from;\n  \n  console.log('movieData:', movieData);\n  \n  \n  useEffect(() => {\n    const fetchMovieData = async () => {\n      try {\n        setIsloading(true);\n        const result = await getMovieDetails(movieId);\n        setMovieData(result);\n        console.log(result);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsloading(false);\n      }\n    };\n    \n      \n    fetchMovieData();\n  }, [movieId]);\n\n  \n\n \n  \n  return (\n    \n    <>\n      {movieData !== null && (\n        <MovieDetailsWrapp>\n          <MovieDetailsTitle>{movieData.title}</MovieDetailsTitle>\n          <img className=\" movie-poster\"\n            src={`https://image.tmdb.org/t/p/w500${movieData.poster_path}`}\n            alt={movieData.title}\n            width=\"300\"\n            height=\"450\"/>\n          <MovieDetailsOverview>{movieData.overview}</MovieDetailsOverview>\n        </MovieDetailsWrapp>\n      )}\n      {isLoading && <p>loading...</p>}\n      {error.length > 0 && <p>{error}</p>}\n      <div>\n        <MovieDetailsList>\n         <li> <Link to={`cast`}> Cast</Link></li>\n          <li><Link to={`reviews`}> Reviews</Link></li>\n          <li><Link className='back-menu' to={backLink ?? '/'}>Back</Link></li>    \n        </MovieDetailsList>  \n      </div>\n      <div>\n        <Routes>\n          <Route path='cast' element={<Cast/>}/>\n          <Route path='reviews'element={<Reviews/>}/>\n        </Routes>\n      </div>\n    </>\n  );\n}\n\nexport default MovieDetails;\n"],"names":["API_KEY","BASE_URL","getTrendingMovies","axios","data","getMovieDetails","movie_id","getMoviesBySearch","pathname","page","query","getMovieCast","getMovieReviews","ReviewsItem","styled","useState","movieReviews","setMovieReviews","isLoading","setIsloading","error","setError","movieId","useParams","useEffect","fetchMovieReviews","result","results","console","log","message","Array","isArray","length","map","id","author","content","CastList","movieCast","setMovieCast","fetchMovieCast","cast","castItem","actorPhoto","profile_path","src","alt","name","width","height","character","MovieDetailsList","MovieDetailsWrapp","MovieDetailsTitle","MovieDetailsOverview","movieData","setMovieData","backLink","useLocation","state","from","fetchMovieData","title","className","poster_path","overview","to","path","element"],"sourceRoot":""}