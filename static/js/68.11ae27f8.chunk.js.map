{"version":3,"file":"static/js/68.11ae27f8.chunk.js","mappings":"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","sources":["api/themovied_api.js","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/SearchForm/SearchForm.jsx","components/SearchGallery/SearchGallery.styled.js","components/SearchGalleryCard/SearchGalleryCard.styled.js","components/SearchGalleryCard/SearchGalleryCard.jsx","components/SearchGallery/SearchGallery.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\n\nconst API_KEY = '5cb4dd4cf3f1476227d92f7c4b196044';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\n\nexport const getTrendingMovies = async () =>{\n    const {data} = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`)\n    return data\n}\n\n\nexport const getMovieDetails = async (movie_id) =>{\n    const {data} = await axios.get(`${BASE_URL}/movie/${movie_id}?api_key=${API_KEY}`)\n    return data\n}\n\nexport const getMoviesBySearch = async (pathname, page = 1, query = '') =>{\n    const {data} = await axios.get(`${BASE_URL}/${pathname}?api_key=${API_KEY}&query=${query}&page=${page}`)\n    return data\n}\n\n\nexport const getMovieCast = async (movie_id) =>{\n    const {data} = await axios.get(`${BASE_URL}/movie/${movie_id}/credits?api_key=${API_KEY}`)\n    return data\n}\n\nexport const getMovieReviews= async (movie_id) =>{\n    const {data} = await axios.get(`${BASE_URL}/movie/${movie_id}/reviews?api_key=${API_KEY}`)\n    return data\n}\n\n// https://api.themoviedb.org/3/trending/movie/{time_window}\n// https://api.themoviedb.org/3/movie/{movie_id}\n// https://api.themoviedb.org/3/search/movie\n\n// https://api.themoviedb.org/3/movie/{movie_id}/credits\n\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { Circles } from  'react-loader-spinner'\nimport css from './Loader.module.css';\n\n\n\nexport function Loader () {\n    return (\n        <div className={css.loader} >\n            <Circles\n            height=\"80\"\n            width=\"80\"\n            color=\"#4fa94d\"\n            ariaLabel=\"circles-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            visible={true}\n            />\n        </div>\n    )\n}","import React,  { useState } from 'react'\nimport { Notify } from 'notiflix';\nimport PropTypes from 'prop-types'\n\n\n\nfunction SearchForm({ onSubmit, message }) {\n  const [inputQuery, setInputQuery] = useState('');\n\n  const handleSearch = event => {\n    setInputQuery(event.currentTarget.value);\n  }\n  \n  const handleSubmit = event => {\n    event.preventDefault();\n    if (inputQuery.trim() === '') {\n      Notify.warning(`Enter something`);\n     \n      return;\n    }\n    onSubmit(inputQuery.trim());\n    setInputQuery('');\n  };\n\n  return (\n    <div>\n      <form className=\"searchbar-form\" onSubmit={handleSubmit}>\n\n        <input\n          className=\"searchbar-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies by name\"\n          value={inputQuery}\n          onChange={handleSearch}\n        />\n        <button type=\"submit\" className=\"searchbar-button\">\n        Search\n        </button>\n      </form>     \n    </div>\n  )\n}\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  message: PropTypes.string.isRequired,\n};\n\nexport default SearchForm","import styled from '@emotion/styled';\n\nexport const Gallery = styled.ul`\ndisplay: flex;\n  flex-wrap: wrap;\n  gap: 32px 16px;\n  margin-bottom: 40px;\n`;","import styled from \"@emotion/styled\";\n\nexport const GalleryItem = styled.li`\ncursor:pointer;\nborder-radius:5px;\n`;","import React from \"react\";\nimport PropTypes from 'prop-types'\nimport { Link, useLocation } from \"react-router-dom\";\n\nimport { GalleryItem } from \"./SearchGalleryCard.styled\";\n\nexport const SearchGalleryCard = ({movie}) =>{\n    const location = useLocation();\n\n    const {title, id, poster_path} = movie;\n    const poster = `https://image.tmdb.org/t/p/w500/${poster_path}`;\n\n    return (\n        <GalleryItem>\n            <Link to={location.pathname === '/' ? `movies/${id}` : `${id}`} state ={{from: location}} >\n            <img className=\" movie-poster\"\n            src={poster}\n            alt={title}\n            width=\"300\"\n            height=\"450\"/>\n            <h3>\n                {title}\n            </h3>\n            </Link>\n        </GalleryItem>\n    )\n} \n\nSearchGalleryCard.propTypes = {movie: PropTypes.object.isRequired};\n","import React from \"react\";\nimport { Gallery } from \"./SearchGallery.styled\";\nimport { SearchGalleryCard } from \"components/SearchGalleryCard/SearchGalleryCard\";\n\n\n\nexport const SearchGallery = ({ movies, pageTitle}) => {\n \n    return(\n        <>\n        <h1 className=\"page-title\">{pageTitle}</h1>\n        <Gallery>\n            {movies.map(movie => (\n                <SearchGalleryCard key={`${movie.id}`} movie={movie} />\n            ) )}\n        </Gallery>\n        </>\n    )\n}","import { getMoviesBySearch } from 'api/themovied_api';\nimport { Loader } from 'components/Loader/Loader';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport { SearchGallery } from 'components/SearchGallery/SearchGallery';\nimport { Notify } from 'notiflix';\nimport { useEffect, useMemo, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const params = useMemo(\n    () => Object.fromEntries([...searchParams]),\n    [searchParams]\n  );\n  const [message, setMessage] = useState('Enter name of movie');\n  const { query = '', page = '1' } = params;\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (!query) return;\n\n    const fetchMoviesBySearch = async () => {\n      try {\n        setIsLoading(true);\n        const { results, total_results, total_pages } = await getMoviesBySearch(\n          'search/movie',\n          page,\n          query\n        );\n        \n        if (Number(page) === 1) {\n          if (total_results > 0) {\n            Notify.success(`Founded ${total_results} for \"${query}\"`);\n            setMessage(`Founded ${total_results} for \"${query}\"`);\n          } else {\n            Notify.warning(`Founded nothing for \"${query}\"`);\n            setMessage(`Founded nothing for \"${query}\"`);\n          }\n        } else {\n          setMessage(`Page ${Number(page)} of ${total_pages} for \"${query}\"`);\n        }\n        console.log('results:', results);  \n        console.log(total_results);\n        console.log(total_pages);\n        setMovies([...results]);      \n      } catch (error) {\n        setError(error.message);\n        Notify.failure(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMoviesBySearch();\n  }, [page, query]);\n\n  const handleSubmit = inputQery => {\n    if (inputQery.toLowerCase() === query.toLowerCase()) {\n      Notify.warning(`You are alredy viewing results for \"${query}\" `);\n      return;\n    }\n    setSearchParams({ query: inputQery, page: '1' });\n    setMovies([]);\n  };\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit} message={message} />\n      {isLoading && <Loader />}\n      {Boolean (error.length) > 0 && <p>{error}</p>}\n      {movies.length>0 && (\n        <SearchGallery movies={movies} pageTitle={`Movies for \"${query}\"`} />\n\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","BASE_URL","getTrendingMovies","axios","data","getMovieDetails","movie_id","getMoviesBySearch","pathname","page","query","getMovieCast","getMovieReviews","Loader","className","css","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","onSubmit","message","useState","inputQuery","setInputQuery","event","preventDefault","trim","Notify","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","Gallery","styled","GalleryItem","SearchGalleryCard","movie","location","useLocation","title","id","poster_path","poster","to","state","from","src","alt","SearchGallery","movies","pageTitle","map","useSearchParams","searchParams","setSearchParams","params","useMemo","Object","fromEntries","setMessage","setMovies","isLoading","setIsLoading","error","setError","useEffect","fetchMoviesBySearch","results","total_results","total_pages","Number","console","log","inputQery","toLowerCase","Boolean","length"],"sourceRoot":""}